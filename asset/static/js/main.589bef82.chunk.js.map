{"version":3,"sources":["components/SpeedAdd/SpeedAdd.js","components/ConfirmDialog/ConfirmDialog.js","components/UpdateInDialog/UpdateInDialog.js","constants/inarray.js","components/SubEventForm/SubEventForm.js","components/AddChainDialog/AddChainDialog.js","components/BoxIn/BoxIn.js","components/BoxOut/BoxOut.js","components/UpdateMainboxDialog/UpdateMainboxDialog.js","components/EventForm/EventForm.js","components/AddEventsDialog/AddEventsDialog.js","components/BoxMain/BoxMain.js","components/BoxEvent/BoxEvent.js","components/EventChain/EventChainEx.js","components/AddDialog/AddDialog.js","components/Info/Info.js","modules/Main/Main.js","pages/HomePage.js","components/ErrorState/ErrorState.js","pages/NotFoundPage.js","router/Router.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","speedDial","position","bottom","spacing","right","actions","icon","name","SpeedAdd","setAddOpen","classes","useState","open","setOpen","handleNew","className","root","SpeedDial","ariaLabel","SpeedDialIcon","onClose","onOpen","map","action","SpeedDialAction","tooltipTitle","onClick","ConfirmDialog","close","confirm","header","message","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","formControl","minWidth","margin","timeforms","selectEmpty","marginTop","textField","width","AddDialog","save","data","eventData","setEventData","useEffect","inputTime","date","title","label","comments","handleClose","maxWidth","fullWidth","disableBackdropClick","disableEscapeKeyDown","onSubmit","e","preventDefault","style","padding","FormControl","TextField","required","defaultValue","onChange","prevState","target","value","type","InputLabelProps","shrink","currentTarget","multiline","rows","variant","eventsTypes","responsible","person","telephone","order","SubEventForm","first","setSubEvents","index","IconButton","aria-label","component","uuidv4","tlfReport","shtReport","deadline","filter","item","InputLabel","htmlFor","NativeSelect","option","paddingTop","paddingRight","FormLabel","FormGroup","row","FormControlLabel","control","Checkbox","checked","state","labelPlacement","AddChainDialog","inId","subEvents","BoxIn","delOpen","setDelOpen","updateOpen","setUpdateOpen","addOpen","onPointerEnter","onPointerLeave","handleMainDel","UpdateInDialog","inData","handleInUpdate","handleAddChain","moment","Date","format","Typography","length","slice","Tooltip","arrow","placement","setTimeout","size","fontSize","background","memo","BoxOut","complete","handleChainDel","UpdateMainboxDialog","Switch","EventForm","setEvents","AddEventsDialog","events","direction","setDirection","paddingLeft","BoxMain","reduce","acum","eTypes","doneOpen","setDoneOpen","timer","setTimer","timeAlert","setTimeAlert","countDiffDuration","end","till","curTime","duration","diff","milSec","asMilliseconds","hours","parseInt","asHours","minutes","asMinutes","handleConfirm","handleDone","handleEventAdd","parent","source","outId","uEvents","upData","handleMainUpdate","completeTime","inTime","BoxEvent","handleDoneConfirn","handleSimpleEventDone","handleSimpleEventDel","handleUndoDone","nodeTypes","input","mainEvent","event","output","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","LayoutFlow","newone","colorUpdate","newEdge","elements","setElements","onLayout","useCallback","layoutedElements","setGraph","rankdir","forEach","el","isNode","setNode","height","setEdge","layout","nodeWithPosition","node","targetPosition","sourcePosition","x","nodeWidth","Math","random","y","nodeHeight","getLayoutedElements","connectionLineType","onConnect","zoomIn","dateTime","setTime","getTime","getTimezoneOffset","toISOString","startDate","main","Info","gutterBottom","List","ListItem","alignItems","ListItemAvatar","ListItemText","primary","secondary","Fragment","Divider","Main","eUpdate","setEUpdate","setColorUpdate","rawData","localStorage","getItem","chainX","JSON","parse","setItem","stringify","updateChains","relativesIds","relativePool","includes","unComleted","push","completed","formElements","edgeType","toLocaleString","timeZone","mainEdgeId","animated","endEvent","backgroundColor","draggable","shtId","labelStyle","fill","fontWeight","tlfId","comdments","mainIn","elementsPool","childsPool","delNode","removeElements","uData","prevStateUp","parentItem","getOutgoers","getIncomers","relatives","mainInput","edgeDel","prevStateUpUp","isEdge","Grid","container","xs","sm","edgeId","toString","substring","firstNode","chains","HomePage","popover","pointerEvents","paper","ErrorState","props","imageWidth","imageHeight","React","anchorEl","setAnchorEl","handlePopoverOpen","handlePopoverClose","Boolean","PopOver","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","poper","Box","transform","top","left","textAlign","image","clone","mb","description","button","onMouseEnter","onMouseLeave","DefaultPoper","defaultProps","NotFoundPage","Router","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.589bef82.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  speedDial: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(5),\r\n    right: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  { icon: <SaveIcon />, name: 'Добавить вводную' },\r\n];\r\n\r\nconst SpeedAdd = ({ setAddOpen }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleNew = () => {\r\n    setOpen(false)\r\n    setAddOpen()\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedAdd\"\r\n        className={classes.speedDial}\r\n        icon={<SpeedDialIcon />}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}\r\n      >\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={handleNew}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpeedAdd","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ConfirmDialog = ({ open, close, confirm, header, message }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {message}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={close} color=\"primary\">\r\n          Отмена\r\n          </Button>\r\n        <Button onClick={confirm} color=\"primary\" autoFocus>\r\n          Да\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\nexport default ConfirmDialog","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 160,\r\n    margin: '10px 0 5px 0'\r\n  },\r\n  timeforms: {\r\n    margin: '10px 5px 0 -5px'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    width: '200px'\r\n  }\r\n}));\r\n\r\nconst AddDialog = ({ open, save, data, close }) => {\r\n  const classes = useStyles();\r\n  const [eventData, setEventData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setEventData({\r\n        id: data.id,\r\n        inputTime: data.date,\r\n        title: data.label,\r\n        comments: data.comments\r\n      })\r\n    }\r\n  }, [open])\r\n\r\n  if (!eventData || !open) return null\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    setEventData(null)\r\n    save(eventData)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth={\"sm\"}\r\n        fullWidth\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n      >\r\n        <form onSubmit={handleSave}>\r\n          <DialogTitle style={{ padding: '16px 24px 0 24px' }} id=\"form-dialog-title\">Обновить вводную</DialogTitle>\r\n          <DialogContent>\r\n            <FormControl className={classes.formControl} fullWidth>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"standard-basic\"\r\n                label=\"Наименование\"\r\n                defaultValue={eventData?.title}\r\n                onChange={(e) => {\r\n                  setEventData(prevState => ({\r\n                    ...prevState,\r\n                    title: e.target.value\r\n                  }))\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <p></p>\r\n            <TextField\r\n              required\r\n              id=\"datetime-local\"\r\n              label=\"Время получения\"\r\n              type=\"datetime-local\"\r\n              defaultValue={eventData.inputTime}\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={(e) => {\r\n                setEventData(\r\n                  {\r\n                    ...eventData,\r\n                    inputTime: e.currentTarget.value\r\n                  }\r\n                )\r\n              }}\r\n            />\r\n            <FormControl className={classes.formControl} fullWidth>\r\n              <TextField\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                fullWidth\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Комментарий\"\r\n                multiline\r\n                rows={2}\r\n                variant=\"outlined\"\r\n                defaultValue={eventData.comments}\r\n                onChange={(e) => {\r\n                  setEventData(\r\n                    {\r\n                      ...eventData,\r\n                      comments: e.currentTarget.value\r\n                    }\r\n                  )\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Отмена\r\n          </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Сохранить\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDialog","const eventsTypes = [\r\n  {\r\n    id: '1',\r\n    title: 'ОСС',\r\n    comments: 'Организация специальной связи',\r\n    responsible: {\r\n      person: 'Котенко К.В.',\r\n      telephone: 'АТС-ОГВ: (0812) 30-60'\r\n    },\r\n    order: 1\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'СИО',\r\n    comments: 'Специальное информационное обеспечение',\r\n    responsible: {\r\n      person: 'Врачев Д.С., Малышев В.Ю.',\r\n      telephone: 'АТС-ОГВ: (0812) 30-82'\r\n    },\r\n    order: 2\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'ИБ',\r\n    comments: 'Информационная безопасность',\r\n    responsible: {\r\n      person: 'Зиновьев Д.Н',\r\n      telephone: 'АТС-ОГВ (0812) 23-08'\r\n    },\r\n    order: 3\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'ТОб',\r\n    comments: 'Территориальная оборона',\r\n    responsible: {\r\n      person: 'Шаповалов Г.Н.',\r\n      telephone: 'АТС-ОГВ (0812) 30-37'\r\n    },\r\n    order: 3\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'КО',\r\n    comments: 'Кадровое обеспечение',\r\n    responsible: {\r\n      person: 'Вашкевич С.А.',\r\n      telephone: 'АТС-ОГВ (0812) 30-41'\r\n    },\r\n    order: 3\r\n  },\r\n  {\r\n    id: '6',\r\n    title: 'МО',\r\n    comments: 'Медицинское обеспечение',\r\n    responsible: {\r\n      person: 'Блудов С.В.',\r\n      telephone: 'АТС-ОГВ (0812) '\r\n    },\r\n    order: 3\r\n  },\r\n  {\r\n    id: '7',\r\n    title: 'МПО',\r\n    comments: 'Морально-психологическое обеспечение',\r\n    responsible: {\r\n      person: 'Литвинова Н.В.',\r\n      telephone: 'АТС-ОГВ (0812) '\r\n    },\r\n    order: 3\r\n  },\r\n  {\r\n    id: '8',\r\n    title: 'МТО',\r\n    comments: 'Материально-техническое обеспечение',\r\n    responsible: {\r\n      person: 'Ниденс Л.В.',\r\n      telephone: 'АТС-ОГВ (0812) 30-37'\r\n    },\r\n    order: 3\r\n  },\r\n]\r\nexport default eventsTypes","import React from 'react'\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport eventsTypes from '../../constants/inarray'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 160,\r\n    margin: '10px 0 5px 0'\r\n  },\r\n  textField: {\r\n    width: '200px'\r\n  }\r\n}));\r\n\r\nconst SubEventForm = ({ first, setSubEvents, eventData, index }) => {\r\n  const classes = useStyles();\r\n  const addEvent = () => {\r\n    setSubEvents((prevState) => ([\r\n      ...prevState,\r\n      {\r\n        id: uuidv4(),\r\n        type: 0,\r\n        tlfReport: false,\r\n        shtReport: false,\r\n        comments: '',\r\n        deadline: ''\r\n      }\r\n    ]))\r\n  }\r\n\r\n  const subEvent = () => {\r\n    setSubEvents((prevState) => {\r\n      return prevState.filter(item => (item.id !== eventData.id))\r\n    })\r\n  }\r\n\r\n  const handleTypeChange = (e) => {\r\n    const value = e.target.value\r\n    setSubEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          type: value\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleDateChange = (e) => {\r\n    const value = e.currentTarget.value\r\n    setSubEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          deadline: value\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleTlfChange = (e) => {\r\n    const state = e.target.checked\r\n    setSubEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          tlfReport: state\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleShtChange = (e) => {\r\n    const state = e.target.checked\r\n    setSubEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          shtReport: state\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleCommentsChange = (e) => {\r\n    const value = e.target.value\r\n    setSubEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          comments: value\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-type-details\">\r\n      {index + 1}\r\n      <IconButton\r\n        className=\"add-subevent-button\"\r\n        color=\"primary\"\r\n        aria-label=\"upload picture\"\r\n        component=\"span\"\r\n        onClick={first ? addEvent : subEvent}\r\n      >\r\n        {\r\n          first ?\r\n            <AddCircleOutlineIcon />\r\n            :\r\n            <HighlightOffIcon />\r\n        }\r\n      </IconButton>\r\n      <FormControl className={classes.formControl} fullWidth>\r\n        <InputLabel htmlFor=\"age-native-helper\">Тип вводной</InputLabel>\r\n        <NativeSelect\r\n          value={null}\r\n          required\r\n          onChange={handleTypeChange}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          {eventsTypes.map(option => (\r\n            <option key={option.id} value={option.id}> {option.title} - {option.comments}</option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <span style={{ paddingRight: '20px' }}>\r\n          <TextField\r\n            required\r\n            id=\"datetime-local\"\r\n            label=\"Deadline\"\r\n            type=\"datetime-local\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleDateChange}\r\n          />\r\n        </span>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Доклад</FormLabel>\r\n          <FormGroup aria-label=\"position\" row>\r\n            <FormControlLabel\r\n              value=\"top\"\r\n              control={\r\n                <Checkbox\r\n                  color=\"secondary\"\r\n                  checked={eventData.tlfReport}\r\n                  onChange={handleTlfChange}\r\n                />\r\n              }\r\n              label=\"ПТС\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Checkbox\r\n                  color=\"secondary\"\r\n                  checked={eventData.shtReport}\r\n                  onChange={handleShtChange}\r\n                />\r\n              }\r\n              label=\"ШТ\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl} fullWidth>\r\n          <TextField\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Комментарий\"\r\n            multiline\r\n            rows={1}\r\n            variant=\"outlined\"\r\n            onChange={handleCommentsChange}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubEventForm","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport SubEventForm from '../SubEventForm'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 160,\r\n    margin: '10px 0 5px 0'\r\n  },\r\n  timeforms: {\r\n    margin: '10px 5px 0 -5px'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    width: '200px'\r\n  }\r\n}));\r\n\r\nconst AddChainDialog = ({ open, save, inId, close }) => {\r\n  const classes = useStyles();\r\n  const [subEvents, setSubEvents] = useState(null)\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    // обнуляем стейт\r\n    setSubEvents([{\r\n      id: uuidv4(),\r\n      type: 0,\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n    save({\r\n      inId,\r\n      subEvents\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSubEvents([{\r\n      id: uuidv4(),\r\n      type: 0,\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n  }, [])\r\n\r\n  const handleClose = () => {\r\n    setSubEvents([{\r\n      id: uuidv4(),\r\n      type: 0,\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n    close()\r\n  }\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  if (!subEvents) return null\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth={\"sm\"}\r\n        fullWidth\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n      >\r\n        <form onSubmit={handleSave}>\r\n          <DialogTitle style={{ padding: '16px 24px 0 24px' }} id=\"form-dialog-title\">Добавить события</DialogTitle>\r\n          <DialogContent>\r\n            {subEvents.map((item, index) => (\r\n              <SubEventForm key={item.id} eventData={item} setSubEvents={setSubEvents} first={index === 0} index={index} />\r\n            ))}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Отмена\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddChainDialog","import React, { Fragment, useState, memo } from 'react'\r\nimport moment from 'moment';\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\nimport UpdateInDialog from '../../components/UpdateInDialog'\r\nimport AddChainDialog from '../../components/AddChainDialog'\r\n\r\nconst BoxIn = ({ data }) => {\r\n  const [open, setOpen] = useState(false)\r\n  const [delOpen, setDelOpen] = useState(false)\r\n  const [updateOpen, setUpdateOpen] = useState(false)\r\n  const [addOpen, setAddOpen] = useState(false)\r\n\r\n  const pointEnterP = () => {\r\n    setOpen(true)\r\n  }\r\n  const pointerLeaveP = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    setAddOpen(true)\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleAddSave = (subEvents) => {\r\n    data.handleAddChain(subEvents)\r\n    setAddOpen(false)\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateOpen(true)\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleUpdateSave = (inData) => {\r\n    setUpdateOpen(false)\r\n    data.handleInUpdate(inData)\r\n  }\r\n\r\n  const handleDel = () => {\r\n    setDelOpen(true)\r\n    setTimeout(() => {\r\n      setOpen(false)\r\n    }, 150)\r\n  }\r\n\r\n  const handleConfirm = () => {\r\n    setOpen(false)\r\n    setDelOpen(false)\r\n    data.handleMainDel(data)\r\n  }\r\n\r\n  const handleInfoClick = () => {\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"input-box-event\" onPointerEnter={pointEnterP} onPointerLeave={pointerLeaveP}>\r\n      <ConfirmDialog\r\n        open={delOpen}\r\n        close={() => setDelOpen(false)}\r\n        confirm={handleConfirm}\r\n        header=\"Подтвердить удаление\"\r\n        message=\"Вы уверены, что хотите удалить ВСЮ вводную? Внимание! Эта операция не может быть отменена. Будьте внимательный.\"\r\n      />\r\n      <UpdateInDialog\r\n        open={updateOpen}\r\n        close={() => setUpdateOpen(false)}\r\n        save={handleUpdateSave}\r\n        data={data}\r\n      />\r\n      <AddChainDialog\r\n        open={addOpen}\r\n        inId={data.id}\r\n        close={() => setAddOpen(false)}\r\n        save={handleAddSave}\r\n      />\r\n      <span className=\"date\">{moment(new Date(data.date)).format(\"DD.MM.YYYY HH:mm\")}</span>\r\n      <Typography variant=\"h6\">\r\n        {data.label.length > 10 ?\r\n          <Fragment>\r\n            {data.label.slice(0, 9) + '...'}\r\n          </Fragment>\r\n          :\r\n          data.label\r\n        }\r\n      </Typography>\r\n      {open &&\r\n        <Fragment>\r\n          <Tooltip title=\"Добавить\" arrow placement=\"top\">\r\n            <IconButton aria-label=\"info\" onClick={handleAdd} className=\"add-btn\">\r\n              <AddCircleOutlineIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Обновить\" arrow placement=\"top\">\r\n            <IconButton aria-label=\"info\" onClick={handleUpdate} className=\"update-btn\">\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Удалить вводную\" arrow placement=\"top\">\r\n            <IconButton aria-label=\"info\" onClick={handleDel} className=\"del-btn\">\r\n              <HighlightOffIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      }\r\n\r\n      <span className=\"service-wrap\">\r\n        {data.comments &&\r\n          <Tooltip title={data.comments}>\r\n            <IconButton aria-label=\"info\" onClick={handleInfoClick} size=\"small\" className=\"info-btn\">\r\n              <InfoOutlinedIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        }\r\n      </span>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"a\"\r\n        style={{ background: '#555' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(BoxIn)","import React, { memo, useState } from 'react'\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\n\r\nconst BoxOut = ({ data }) => {\r\n  const [open, setOpen] = useState(false)\r\n  const [delOpen, setDelOpen] = useState(false)\r\n\r\n  const handleDel = () => {\r\n    setDelOpen(true)\r\n    setOpen(false)\r\n  }\r\n  const pointEnterP = () => {\r\n    setOpen(true)\r\n  }\r\n  const pointerLeaveP = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleConfirm = () => {\r\n    setDelOpen(false)\r\n    data.handleChainDel(data)\r\n  }\r\n\r\n  return (\r\n    <div className={data.complete ? \"out-box-event done\" : \"out-box-event\"} onPointerEnter={pointEnterP} onPointerLeave={pointerLeaveP}>\r\n      <ConfirmDialog\r\n        open={delOpen}\r\n        close={() => setDelOpen(false)}\r\n        confirm={handleConfirm}\r\n        header=\"Подтвердить удаление\"\r\n        message=\"Вы уверены, что хотите удалить цепочку событий? Внимание! Эта операция не может быть отменена. Будьте внимательный.\"\r\n      />\r\n      {open &&\r\n        <Tooltip title=\"Удалить цепочку\" arrow placement=\"right\">\r\n          <IconButton aria-label=\"info\" onClick={handleDel} className=\"del-btn\">\r\n            <HighlightOffIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      }\r\n      <Typography variant=\"h6\" className=\"animate__shakeX\">\r\n        {data.label}\r\n      </Typography>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"left\"\r\n        style={{ background: '#555' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(BoxOut)","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport eventsTypes from '../../constants/inarray'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 160,\r\n    margin: '10px 0 5px 0'\r\n  },\r\n  timeforms: {\r\n    margin: '10px 5px 0 -5px'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    width: '200px'\r\n  }\r\n}));\r\n\r\nconst UpdateMainboxDialog = ({ open, save, data, close }) => {\r\n  const classes = useStyles();\r\n  const [eventData, setEventData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setEventData({\r\n        id: data.id,\r\n        type: data.type,\r\n        deadline: data.deadline,\r\n        comments: data.comments,\r\n        complete: data.complete\r\n      })\r\n    }\r\n  }, [open])\r\n\r\n  if (!eventData || !open) return null\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    setEventData(null)\r\n    save(eventData)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    close()\r\n  }\r\n\r\n  const handleTypeChange = (e) => {\r\n    const value = e.target.value\r\n    setEventData(prevState => ({\r\n      ...prevState,\r\n      type: value\r\n    }))\r\n  }\r\n\r\n  const handleSwitcher = (e) => {\r\n    setEventData(prevState => ({\r\n      ...prevState,\r\n      complete: !prevState.complete\r\n    }))\r\n  }\r\n\r\n  const handleData = (e) => {\r\n    setEventData(\r\n      {\r\n        ...eventData,\r\n        deadline: e.currentTarget.value\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth={\"sm\"}\r\n        fullWidth\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n      >\r\n        <form onSubmit={handleSave}>\r\n          <DialogTitle style={{ padding: '16px 24px 0 24px' }} id=\"form-dialog-title\">Обновить вводную</DialogTitle>\r\n          <DialogContent>\r\n            <FormControl className={classes.formControl} fullWidth>\r\n              <InputLabel htmlFor=\"age-native-helper\">Тип вводной</InputLabel>\r\n              <NativeSelect\r\n                value={eventData.type}\r\n                required\r\n                onChange={handleTypeChange}\r\n              >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                {eventsTypes.map(option => (\r\n                  <option key={option.id} value={option.id}> {option.title} - {option.comments}</option>\r\n                ))}\r\n              </NativeSelect>\r\n            </FormControl>\r\n            <p></p>\r\n            <span style={{ paddingRight: '20px' }}>\r\n              <TextField\r\n                required\r\n                id=\"datetime-local\"\r\n                label=\"Deadline\"\r\n                type=\"datetime-local\"\r\n                defaultValue={eventData.deadline}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={handleData}\r\n              />\r\n            </span>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Отработано</FormLabel>\r\n              <FormGroup aria-label=\"position\" row>\r\n                <FormControlLabel\r\n                  value=\"top\"\r\n                  control={\r\n                    <Switch\r\n                      checked={eventData.complete}\r\n                      onChange={handleSwitcher}\r\n                    />\r\n                  }\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl} fullWidth>\r\n              <TextField\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                fullWidth\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Комментарий\"\r\n                multiline\r\n                rows={2}\r\n                variant=\"outlined\"\r\n                defaultValue={eventData.comments}\r\n                onChange={(e) => {\r\n                  setEventData(\r\n                    {\r\n                      ...eventData,\r\n                      comments: e.currentTarget.value\r\n                    }\r\n                  )\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Отмена\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateMainboxDialog","import React from 'react'\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  formControl: {\r\n    minWidth: 160,\r\n    margin: '10px 0 5px 0'\r\n  },\r\n  textField: {\r\n    width: '200px'\r\n  }\r\n}));\r\n\r\nconst EventForm = ({ first, setEvents, eventData, index }) => {\r\n  const classes = useStyles();\r\n  const addEvent = () => {\r\n    setEvents((prevState) => ([\r\n      ...prevState,\r\n      {\r\n        id: uuidv4(),\r\n        type: 0,\r\n        tlfReport: false,\r\n        shtReport: false,\r\n        comments: '',\r\n        deadline: ''\r\n      }\r\n    ]))\r\n  }\r\n  const subEvent = () => {\r\n    setEvents((prevState) => {\r\n      return prevState.filter(item => (item.id !== eventData.id))\r\n    })\r\n  }\r\n\r\n  const handleTitleChange = (e) => {\r\n    const value = e.target.value\r\n    setEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          title: value\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleDateChange = (e) => {\r\n    const value = e.currentTarget.value\r\n    setEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          deadline: value\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleTlfChange = (e) => {\r\n    const state = e.target.checked\r\n    setEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          tlfReport: state\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleShtChange = (e) => {\r\n    const state = e.target.checked\r\n    setEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          shtReport: state\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  const handleCommentsChange = (e) => {\r\n    const value = e.target.value\r\n    setEvents(prevState => prevState.map(item => {\r\n      if (item.id === eventData.id) {\r\n        return {\r\n          ...item,\r\n          comments: value\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-type-details\">\r\n      {index + 1}\r\n      <IconButton\r\n        className=\"add-subevent-button\"\r\n        color=\"primary\"\r\n        aria-label=\"upload picture\"\r\n        component=\"span\"\r\n        onClick={first ? addEvent : subEvent}\r\n      >\r\n        {\r\n          first ?\r\n            <AddCircleOutlineIcon />\r\n            :\r\n            <HighlightOffIcon />\r\n        }\r\n      </IconButton>\r\n      <FormControl className={classes.formControl} fullWidth>\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          id=\"standard-basic\"\r\n          label=\"Наименование\"\r\n          defaultValue={eventData.title}\r\n          onChange={handleTitleChange}\r\n        />\r\n      </FormControl>\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <span style={{ paddingRight: '20px' }}>\r\n          <TextField\r\n            id=\"datetime-local\"\r\n            label=\"Deadline\"\r\n            type=\"datetime-local\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleDateChange}\r\n          />\r\n        </span>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Доклад</FormLabel>\r\n          <FormGroup aria-label=\"position\" row>\r\n            <FormControlLabel\r\n              value=\"top\"\r\n              control={\r\n                <Checkbox\r\n                  color=\"secondary\"\r\n                  checked={eventData.tlfReport}\r\n                  onChange={handleTlfChange}\r\n                />\r\n              }\r\n              label=\"ПТС\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Checkbox\r\n                  color=\"secondary\"\r\n                  checked={eventData.shtReport}\r\n                  onChange={handleShtChange}\r\n                />\r\n              }\r\n              label=\"ШТ\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl} fullWidth>\r\n          <TextField\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Комментарий\"\r\n            multiline\r\n            rows={1}\r\n            variant=\"outlined\"\r\n            onChange={handleCommentsChange}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventForm","import React, { useState, useEffect } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport EventForm from '../EventForm'\r\n\r\nconst AddEventsDialog = ({ open, save, close }) => {\r\n  const [events, setEvents] = useState(null)\r\n  const [direction, setDirection] = useState(true)\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    // обнуляем стейт\r\n    setEvents([{\r\n      id: uuidv4(),\r\n      title: '',\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n    save({\r\n      events,\r\n      direction\r\n    })\r\n    close()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEvents([{\r\n      id: uuidv4(),\r\n      title: '',\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n  }, [])\r\n\r\n  const handleClose = () => {\r\n    setEvents([{\r\n      id: uuidv4(),\r\n      title: '',\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n    close()\r\n  }\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  if (!events) return null\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth={\"sm\"}\r\n        fullWidth\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n      >\r\n        <form onSubmit={handleSave}>\r\n          <DialogTitle style={{ padding: '16px 24px 0 24px' }} id=\"form-dialog-title\">Добавить события\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  color=\"primary\"\r\n                  checked={direction}\r\n                  onChange={() => setDirection(prevState => !prevState)}\r\n                />}\r\n              label=\"Вставить: до\"\r\n              labelPlacement=\"start\"\r\n            />\r\n            <span style={{\r\n              paddingLeft: '10px',\r\n              fontSize: '16px'\r\n            }}>после</span>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {events.map((item, index) => (\r\n              <EventForm key={item.id} eventData={item} setEvents={setEvents} first={index === 0} index={index} />\r\n            ))}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Отмена\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default AddEventsDialog","import React, { Fragment, useState, memo, useEffect } from 'react'\r\nimport { Handle } from 'react-flow-renderer';\r\nimport moment from 'moment';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\n\r\nimport UpdateMainboxDialog from '../../components/UpdateMainboxDialog';\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\nimport AddEventsDialog from '../../components/AddEventsDialog'\r\n\r\nimport eventsTypes from '../../constants/inarray'\r\n\r\nconst BoxMain = ({ data }) => {\r\n  const [eTypes] = useState(eventsTypes.reduce((acum, item) => {\r\n    acum[item.id] = item\r\n    return acum\r\n  }, {}))\r\n  const [open, setOpen] = useState(false);\r\n  const [doneOpen, setDoneOpen] = useState(false)\r\n  const [addOpen, setAddOpen] = useState(false)\r\n  const [updateOpen, setUpdateOpen] = useState(false)\r\n  const [timer, setTimer] = useState(false)\r\n  const [timeAlert, setTimeAlert] = useState(false)\r\n\r\n  const pointEnterP = () => {\r\n    setOpen(true)\r\n  }\r\n  const pointerLeaveP = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimer(countDiffDuration(data.deadline))\r\n    setTimeout(() => {\r\n      setTimer(countDiffDuration(data.deadline))\r\n    }, 1000 * 60)\r\n  })\r\n\r\n  if (!eTypes || !data) return null\r\n\r\n  const countDiffDuration = (end) => {\r\n    const till = moment(new Date(end))\r\n    const curTime = new moment()\r\n    const duration = moment.duration(till.diff(curTime))\r\n    const milSec = duration.asMilliseconds()\r\n    if (milSec < 660000) {\r\n      setTimeAlert(true)\r\n    } else {\r\n      setTimeAlert(false)\r\n    }\r\n    const hours = parseInt(duration.asHours())\r\n    const minutes = parseInt(duration.asMinutes()) % 60\r\n    return hours ? `${hours} ч ${minutes} мин` : `${minutes} мин`\r\n  }\r\n\r\n  const handleInfoClick = () => {\r\n\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    setAddOpen(true)\r\n  }\r\n\r\n  const handleAddConfirm = ({ events, direction }) => {\r\n    setAddOpen(false)\r\n    data.handleEventAdd({\r\n      parent: {\r\n        source: data.id,\r\n        inId: data.inId,\r\n        outId: data.outId,\r\n        direction\r\n      },\r\n      uEvents: events\r\n    })\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateOpen(true)\r\n  }\r\n\r\n  const handleUpdateConfirm = (upData) => {\r\n    setUpdateOpen(false)\r\n    data.handleMainUpdate(upData)\r\n  }\r\n\r\n  const handleDone = () => {\r\n    setDoneOpen(true)\r\n  }\r\n\r\n  const handleConfirm = () => {\r\n    setDoneOpen(false)\r\n    data.handleDone(data)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AddEventsDialog\r\n        open={addOpen}\r\n        save={handleAddConfirm}\r\n        close={() => setAddOpen(false)}\r\n      />\r\n      <ConfirmDialog\r\n        open={doneOpen}\r\n        close={() => setDoneOpen(false)}\r\n        confirm={handleConfirm}\r\n        header=\"Подтвердить\"\r\n        message=\"Отметить как исполненное?\"\r\n      />\r\n      <UpdateMainboxDialog\r\n        open={updateOpen}\r\n        close={() => setUpdateOpen(false)}\r\n        save={handleUpdateConfirm}\r\n        data={data}\r\n      />\r\n      <div className={data.complete ? \"main-box-wrap done\" : \"main-box-wrap\"} onPointerEnter={pointEnterP} onPointerLeave={pointerLeaveP}>\r\n        <Handle\r\n          type=\"target\"\r\n          position=\"left\"\r\n        />\r\n        {data.complete !== true &&\r\n          <span className=\"date\">{moment(new Date(data.deadline)).format(\"DD.MM.YYYY HH:mm\")}</span>\r\n        }\r\n        {data.complete &&\r\n          <Tooltip title=\"Время завершения\" arrow placement=\"bottom\">\r\n            <span className=\"date-complete\">{data.completeTime.slice(0, -3)}</span>\r\n          </Tooltip>\r\n        }\r\n        {open &&\r\n          <Fragment>\r\n            <Tooltip title=\"Добавить\" arrow placement=\"top\">\r\n              <IconButton aria-label=\"info\" onClick={handleAdd} className=\"add-btn\">\r\n                <AddCircleOutlineIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Редактировать\" arrow placement=\"top\">\r\n              <IconButton aria-label=\"info\" onClick={handleUpdate} className=\"update-btn\">\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {data.complete !== true &&\r\n              <Tooltip title=\"Отметить о выполнении\" arrow placement=\"top\">\r\n                <IconButton aria-label=\"info\" onClick={handleConfirm} className=\"done-btn\">\r\n                  <CheckCircleOutlineIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            }\r\n          </Fragment>\r\n        }\r\n        {(open || timeAlert) && data.complete !== true &&\r\n          <div className={timeAlert ? \"timer alert\" : \"timer\"}>{timer}</div>\r\n        }\r\n        <Typography variant=\"h6\">\r\n          {eTypes[data.type].title}\r\n        </Typography>\r\n        <span className=\"service-wrap\">\r\n          {data.inTime &&\r\n            <Tooltip title={`Получен - ${data.inTime}`} arrow>\r\n              <IconButton aria-label=\"info\" onClick={() => { }} size=\"small\" className=\"time-btn\">\r\n                <QueryBuilderIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n          {data.comments &&\r\n            <Tooltip title={data.comments} arrow>\r\n              <IconButton aria-label=\"info\" onClick={handleInfoClick} size=\"small\" className=\"info-btn\">\r\n                <InfoOutlinedIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n        </span>\r\n        <Handle\r\n          type=\"source\"\r\n          position=\"right\"\r\n          id=\"a\"\r\n          style={{ background: '#555' }}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(BoxMain)","import React, { useState, memo, useEffect, Fragment } from 'react'\r\nimport { Handle } from 'react-flow-renderer';\r\nimport moment from 'moment';\r\n\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\n\r\nconst BoxEvent = ({ data }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [doneOpen, setDoneOpen] = useState(false)\r\n  const [delOpen, setDelOpen] = useState(false)\r\n  const [addOpen, setAddOpen] = useState(false)\r\n  const pointEnterP = () => {\r\n    setOpen(true)\r\n  }\r\n  const pointerLeaveP = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleDoneConfirn = () => {\r\n    setDoneOpen(false)\r\n    data.handleSimpleEventDone(data.id)\r\n  }\r\n\r\n  const handleInfoClick = () => {\r\n\r\n  }\r\n\r\n  const handleDel = () => {\r\n    setDelOpen(true)\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleDelConfirn = () => {\r\n    setDelOpen(false)\r\n    data.handleSimpleEventDel(data.id)\r\n  }\r\n\r\n  const handleDone = () => {\r\n    setDoneOpen(true)\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleAdd = () => {\r\n\r\n  }\r\n\r\n  const handleUndoDone = () => {\r\n    data.handleUndoDone(data.id)\r\n  }\r\n\r\n  return (\r\n    <div className={data.complete ? \"event-box-wrap done\" : \"event-box-wrap\"} onPointerEnter={pointEnterP} onPointerLeave={pointerLeaveP}>\r\n      <ConfirmDialog\r\n        open={doneOpen}\r\n        close={() => setDoneOpen(false)}\r\n        confirm={handleDoneConfirn}\r\n        header=\"Подтвердить\"\r\n        message=\"Отметить как исполненное?\"\r\n      />\r\n      <ConfirmDialog\r\n        open={delOpen}\r\n        close={() => setDelOpen(false)}\r\n        confirm={handleDelConfirn}\r\n        header=\"Подтвердить удаление\"\r\n        message=\"Вы уверены, что хотите удалить данное событие? Внимание! Эта операция не может быть отменена. Будьте внимательный.\"\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"left\"\r\n      />\r\n      {data.complete &&\r\n        <Tooltip title=\"Время доклада\" arrow placement=\"bottom\">\r\n          <span className=\"date-complete\">{data.completeTime.slice(0, -3)}</span>\r\n        </Tooltip>\r\n      }\r\n      <Typography variant=\"h6\">\r\n        {data.label}\r\n      </Typography>\r\n      {open &&\r\n        <Fragment>\r\n          {data.complete !== true &&\r\n            <Tooltip title=\"Отметить о выполнении\" arrow placement=\"left\">\r\n              <IconButton aria-label=\"info\" onClick={handleDoneConfirn} className=\"done-btn\">\r\n                <CheckCircleOutlineIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n          {data.complete &&\r\n            <Tooltip title=\"Отменить исполнение\" arrow placement=\"left\">\r\n              <IconButton aria-label=\"info\" onClick={handleUndoDone} className=\"done-btn\">\r\n                <UndoIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n          <Tooltip title=\"Удалить\" arrow placement=\"right\">\r\n            <IconButton aria-label=\"info\" onClick={handleDel} className=\"del-btn\">\r\n              <HighlightOffIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      }\r\n      <span className=\"service-wrap\">\r\n        {data.inTime &&\r\n          <Tooltip title={`Получен - ${data.inTime}`} arrow>\r\n            <IconButton aria-label=\"info\" onClick={() => { }} size=\"small\" className=\"time-btn\">\r\n              <QueryBuilderIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        }\r\n        {data.comments &&\r\n          <Tooltip title={data.comments}>\r\n            <IconButton aria-label=\"info\" onClick={handleInfoClick} size=\"small\" className=\"info-btn\">\r\n              <InfoOutlinedIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        }\r\n      </span>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"a\"\r\n        style={{ background: '#555' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(BoxEvent)","import React, { useState, useCallback, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  addEdge,\r\n  isNode,\r\n} from 'react-flow-renderer';\r\nimport dagre from 'dagre';\r\n\r\nimport BoxIn from '../BoxIn'\r\nimport BoxOut from '../BoxOut'\r\nimport BoxMain from '../BoxMain'\r\nimport BoxEvent from '../BoxEvent'\r\n\r\nconst nodeTypes = {\r\n  input: BoxIn,\r\n  mainEvent: BoxMain,\r\n  event: BoxEvent,\r\n  output: BoxOut\r\n};\r\n\r\nconst nodeWidth = 200;\r\nconst nodeHeight = 76;\r\nconst RANFDIR = 'LR'\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\nconst getLayoutedElements = (elements) => {\r\n  dagreGraph.setGraph({ rankdir: RANFDIR });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = 'left'\r\n      el.sourcePosition = 'right'\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n    return el;\r\n  });\r\n};\r\n\r\n\r\nconst LayoutFlow = ({ events, newone, colorUpdate, newEdge }) => {\r\n  const [elements, setElements] = useState([]);\r\n  const onLayout = useCallback(\r\n    (events) => {\r\n      const layoutedElements = getLayoutedElements(events);\r\n      setElements(layoutedElements);\r\n    },\r\n    [elements]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onLayout(events)\r\n  }, [newone, colorUpdate])\r\n\r\n  const style = {\r\n    background: '#fff',\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n\r\n  const handleEventClick = (_, node) => {\r\n    console.log(node);\r\n  }\r\n\r\n  const onEdgeMouseEnter = (_, edge) => {\r\n    console.log(edge);\r\n  }\r\n\r\n  const onConnect = ({ source, target }) => {\r\n    newEdge(source, target)\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-chain\">\r\n      <ReactFlow\r\n        style={style}\r\n        nodeTypes={nodeTypes}\r\n        elements={elements}\r\n        // onElementClick={handleEventClick}\r\n        connectionLineType=\"smoothstep\"\r\n        // onEdgeMouseEnter={onEdgeMouseEnter}\r\n        onConnect={onConnect}\r\n        zoomIn={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutFlow;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport SubEventForm from '../SubEventForm'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 160,\r\n    margin: '10px 0 5px 0'\r\n  },\r\n  timeforms: {\r\n    margin: '10px 5px 0 -5px'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    width: '200px'\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst AddDialog = ({ open, save, close }) => {\r\n  const classes = useStyles();\r\n\r\n  const [eventData, setEventData] = useState(null)\r\n  const [subEvents, setSubEvents] = useState(null)\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    // обнуляем стейт\r\n    setSubEvents([{\r\n      id: uuidv4(),\r\n      type: 0,\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n    save({\r\n      main: eventData,\r\n      subEvents\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSubEvents([{\r\n      id: uuidv4(),\r\n      type: 0,\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n  }, [])\r\n\r\n  const handleClose = () => {\r\n    setSubEvents([{\r\n      id: uuidv4(),\r\n      type: 0,\r\n      tlfReport: false,\r\n      shtReport: false,\r\n      comments: '',\r\n      deadline: ''\r\n    }])\r\n    close()\r\n  }\r\n\r\n  useEffect(() => {\r\n    var dateTime = new Date()\r\n    dateTime.setTime(dateTime.getTime() - dateTime.getTimezoneOffset() * 60 * 1000)\r\n    const date = dateTime.toISOString().slice(0, 16)\r\n    setEventData({\r\n      startDate: date,\r\n      // tlfReport: true,\r\n      // shtReport: true\r\n    })\r\n  }, [])\r\n\r\n  if (!eventData) return null\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth={\"sm\"}\r\n        fullWidth\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n      >\r\n        <form onSubmit={handleSave}>\r\n          <DialogTitle style={{ padding: '16px 24px 0 24px' }} id=\"form-dialog-title\">Добавить вводную</DialogTitle>\r\n          <DialogContent>\r\n            <FormControl className={classes.formControl} fullWidth>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"standard-basic\"\r\n                label=\"Наименование\"\r\n                onChange={(e) => {\r\n                  setEventData(prevState => ({\r\n                    ...prevState,\r\n                    title: e.target.value\r\n                  }))\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <p></p>\r\n            <TextField\r\n              required\r\n              id=\"datetime-local\"\r\n              label=\"Время получения\"\r\n              type=\"datetime-local\"\r\n              defaultValue={eventData.startDate}\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={(e) => {\r\n                setEventData(\r\n                  {\r\n                    ...eventData,\r\n                    inputTime: e.currentTarget.value\r\n                  }\r\n                )\r\n              }}\r\n            />\r\n            {subEvents.map((item, index) => (\r\n              <SubEventForm key={item.id} eventData={item} setSubEvents={setSubEvents} first={index === 0} index={index} />\r\n            ))}\r\n            <FormControl className={classes.formControl} fullWidth>\r\n              <TextField\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                fullWidth\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Комментарий\"\r\n                multiline\r\n                rows={2}\r\n                variant=\"outlined\"\r\n                onChange={(e) => {\r\n                  setEventData(\r\n                    {\r\n                      ...eventData,\r\n                      comments: e.currentTarget.value\r\n                    }\r\n                  )\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Отмена\r\n          </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Сохранить\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDialog","import React, { Fragment, memo } from 'react'\r\n\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport eventsTypes from '../../constants/inarray'\r\n\r\nconst Info = () => {\r\n  return (\r\n    <Fragment>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Информация\r\n      </Typography>\r\n      {eventsTypes &&\r\n        <List>\r\n          {eventsTypes.map(item => (\r\n            <Fragment key={item.id}>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar className=\"info-title\">\r\n                  {item.title}\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={item.comments}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        color=\"textPrimary\"\r\n                        className=\"info-person\"\r\n                      >\r\n                        Отв. <strong>{item.responsible.person}</strong>\r\n                      </Typography>\r\n                      <br />\r\n                      {item.responsible.telephone}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </Fragment>\r\n          ))}\r\n        </List>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default memo(Info)","import React, { Fragment, useEffect, useState } from 'react'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  isNode,\r\n  getOutgoers,\r\n  isEdge,\r\n  removeElements,\r\n  getIncomers\r\n} from 'react-flow-renderer';\r\n\r\nimport SpeedAdd from '../../components/SpeedAdd'\r\nimport EventChain from '../../components/EventChain'\r\nimport AddDialog from '../../components/AddDialog'\r\nimport Info from '../../components/Info'\r\nimport ConfirmDialog from '../../components/ConfirmDialog'\r\n\r\nconst Main = () => {\r\n  const [open, setOpen] = useState(false)\r\n  const [events, setEvents] = useState([])\r\n  const [eUpdate, setEUpdate] = useState(false)\r\n  const [colorUpdate, setColorUpdate] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const rawData = localStorage.getItem('chain')\r\n    if (rawData) {\r\n      const chains = JSON.parse(rawData)\r\n      const chainX = chains.map(item => {\r\n        if (isNode(item)) {\r\n          return {\r\n            ...item,\r\n            data: {\r\n              ...item.data,\r\n              handleEventAdd,\r\n              handleDone,\r\n              handleChainDel,\r\n              handleInUpdate,\r\n              handleAddChain,\r\n              handleMainDel,\r\n              handleMainUpdate,\r\n              handleSimpleEventDone,\r\n              handleSimpleEventDel,\r\n              handleUndoDone,\r\n            }\r\n          }\r\n        }\r\n        return item\r\n      })\r\n      setEvents(chainX)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('chain', JSON.stringify(events))\r\n  }, [events])\r\n\r\n\r\n  useEffect(() => {\r\n    // проверить исполнение\r\n    const outPuts = events.filter(item => item.type === 'output')\r\n    const updateChains = outPuts.reduce((acum, item) => {\r\n      const relativesIds = item.data.relativePool\r\n      const outId = item.id\r\n      const relativeNodes = events.filter(item =>\r\n        isNode(item) && relativesIds.includes(item.id) && item.id !== outId\r\n      ).filter(item => item.data.complete !== true)\r\n      if (!relativeNodes.length) {\r\n        acum.completed.push(item.id)\r\n      } else {\r\n        acum.unComleted.push(item.id)\r\n      }\r\n      return acum\r\n    }, {\r\n      completed: [],\r\n      unComleted: []\r\n    })\r\n    setEvents(prevState => prevState.map(item => {\r\n      if (updateChains.completed.includes(item.id)) {\r\n        return {\r\n          ...item,\r\n          data: {\r\n            ...item.data,\r\n            complete: true,\r\n            label: 'Исполнено'\r\n          }\r\n        }\r\n      }\r\n      if (updateChains.unComleted.includes(item.id)) {\r\n        return {\r\n          ...item,\r\n          data: {\r\n            ...item.data,\r\n            complete: false,\r\n            label: 'Исполнение'\r\n          }\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n    setColorUpdate(prevState => prevState + 1)\r\n  }, [eUpdate])\r\n\r\n\r\n  const handleEventAddMain = (data) => {\r\n    setOpen(false)\r\n    const position = { x: 0, y: 0 };\r\n    const main = data.main\r\n    const inId = uuidv4()\r\n    const firstNode = {\r\n      id: inId,\r\n      type: 'input',\r\n      data: {\r\n        id: inId,\r\n        inId,\r\n        label: main.title,\r\n        comments: main.comments,\r\n        date: main.startDate,\r\n        handleMainDel,\r\n        handleInUpdate,\r\n        handleAddChain\r\n      },\r\n      draggable: false,\r\n      position: position,\r\n      className: \"inputEvent\"\r\n    }\r\n    const subEvents = data.subEvents\r\n    const { elementsPool, childsPool } = formElements(subEvents, inId)\r\n    const chains = [\r\n      {\r\n        ...firstNode,\r\n        data: {\r\n          ...firstNode.data,\r\n          childsPool\r\n        }\r\n      },\r\n      ...elementsPool\r\n    ]\r\n    setEvents(prevState => ([\r\n      ...prevState,\r\n      ...chains\r\n    ]))\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const formElements = (subEvents, inId) => {\r\n    const edgeType = 'straight';\r\n    const position = { x: 0, y: 0 };\r\n    const inTime = new Date().toLocaleString(\"ru-RU\", { timeZone: \"Europe/Moscow\" })\r\n    const events = subEvents.reduce((acum, event) => {\r\n      const relativePool = []\r\n      // основные\r\n      const mainEdgeId = `e${event.id}`\r\n      acum.push({\r\n        id: mainEdgeId,\r\n        source: inId,\r\n        target: event.id,\r\n        type: edgeType,\r\n        animated: true\r\n      })\r\n      relativePool.push(mainEdgeId)\r\n      // добавлять в пул не надо -> пойдет отельным полем у детей\r\n      // конец отработки\r\n      const outId = uuidv4()\r\n      const endEvent = {\r\n        id: outId,\r\n        type: 'output',\r\n        className: \"output-event\",\r\n        data: {\r\n          label: 'Исполнение',\r\n          complete: false,\r\n          inId,\r\n          outId,\r\n          handleChainDel\r\n        },\r\n        style: { backgroundColor: 'red', color: '#fff' },\r\n        draggable: false,\r\n        position\r\n      }\r\n      relativePool.push(outId)\r\n      // ПТС - ШТ\r\n      if (event.shtReport) {\r\n        const shtId = uuidv4()\r\n        // ШТ - конец\r\n        acum.push({\r\n          id: `sht${event.id}`,\r\n          source: shtId,\r\n          target: endEvent.id,\r\n          type: edgeType,\r\n          animated: true\r\n        })\r\n        relativePool.push(`sht${event.id}`)\r\n\r\n        acum.push({\r\n          id: shtId,\r\n          type: 'event',\r\n          className: 'simple-event',\r\n          data: {\r\n            id: shtId,\r\n            label: 'ПТС',\r\n            complete: false,\r\n            inTime,\r\n            inId,\r\n            outId,\r\n            handleEventAdd,\r\n            handleSimpleEventDone,\r\n            handleSimpleEventDel,\r\n            handleUndoDone\r\n          },\r\n          position: position,\r\n          style: { backgroundColor: 'red', color: '#fff' },\r\n          draggable: false\r\n        })\r\n        relativePool.push(shtId)\r\n\r\n        // начало - ШТ\r\n        acum.push({\r\n          id: `tosht${event.id}`,\r\n          source: event.id,\r\n          target: shtId,\r\n          type: edgeType,\r\n          animated: true,\r\n          label: 'Доклад',\r\n          labelStyle: { fill: 'red', fontWeight: 700, fontSize: '12px' },\r\n        })\r\n        relativePool.push(`tosht${event.id}`)\r\n      }\r\n      if (event.tlfReport) {\r\n        const tlfId = uuidv4()\r\n        // ПТС - конец\r\n        acum.push({\r\n          id: `tlf${event.id}`,\r\n          source: tlfId,\r\n          target: endEvent.id,\r\n          type: edgeType,\r\n          animated: true\r\n        })\r\n        relativePool.push(`tlf${event.id}`)\r\n        acum.push({\r\n          id: tlfId,\r\n          type: 'event',\r\n          className: 'simple-event',\r\n          data: {\r\n            id: tlfId,\r\n            label: 'ШТ',\r\n            complete: false,\r\n            inTime,\r\n            inId,\r\n            outId,\r\n            handleEventAdd,\r\n            handleSimpleEventDone,\r\n            handleSimpleEventDel,\r\n            handleUndoDone\r\n          },\r\n          position: position,\r\n          style: { backgroundColor: 'red', color: '#fff' },\r\n          draggable: false\r\n        })\r\n        relativePool.push(tlfId)\r\n        // начало - ПТС\r\n        acum.push({\r\n          id: `totlf${event.id}`,\r\n          source: event.id,\r\n          target: tlfId,\r\n          type: edgeType,\r\n          animated: true,\r\n          label: 'Доклад',\r\n          labelStyle: { fill: 'red', fontWeight: 700, fontSize: '12px' },\r\n        })\r\n        relativePool.push(`totlf${event.id}`)\r\n      }\r\n      if (!event.shtReport && !event.tlfReport) {\r\n        acum.push({\r\n          id: `mtoend${event.id}`,\r\n          source: event.id,\r\n          target: endEvent.id,\r\n          type: edgeType,\r\n          animated: true\r\n        })\r\n        relativePool.push(`mtoend${event.id}`)\r\n      }\r\n      acum.push({\r\n        id: event.id,\r\n        type: 'mainEvent',\r\n        className: 'main-event',\r\n        data: {\r\n          id: event.id,\r\n          complete: false,\r\n          inTime,\r\n          inId,\r\n          outId,\r\n          handleEventAdd,\r\n          handleDone,\r\n          handleMainUpdate,\r\n          type: event.type,\r\n          deadline: event.deadline,\r\n          comdments: event.comments\r\n        },\r\n        style: { backgroundColor: 'red', color: '#fff' },\r\n        position: position,\r\n        draggable: false\r\n      })\r\n      relativePool.push(event.id)\r\n      acum.push({\r\n        ...endEvent,\r\n        data: {\r\n          ...endEvent.data,\r\n          relativePool,\r\n          mainIn: inId,\r\n          mainEdgeId\r\n        }\r\n      })\r\n      return acum\r\n    }, [])\r\n    return {\r\n      elementsPool: events,\r\n      childsPool: events.map(item => item.id)\r\n    }\r\n  }\r\n\r\n  const handleDone = (data) => {\r\n    setEvents(prevState => (\r\n      prevState.map(item => {\r\n        if (isNode(item) && item.id === data.id) {\r\n          return {\r\n            ...item,\r\n            data: {\r\n              ...item.data,\r\n              complete: true,\r\n              completeTime: new Date().toLocaleString(\"ru-RU\", { timeZone: \"Europe/Moscow\" })\r\n            }\r\n          }\r\n        }\r\n        return item\r\n      })\r\n    ))\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleUndoDone = (id) => {\r\n    setEvents(prevState =>\r\n      prevState.map(item => item.id === id ?\r\n        {\r\n          ...item,\r\n          data: {\r\n            ...item.data,\r\n            complete: false,\r\n            completeTime: false\r\n          }\r\n        }\r\n        :\r\n        item\r\n      )\r\n    )\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleSimpleEventDone = (id) => {\r\n    setEvents(prevState => (\r\n      prevState.map(item => {\r\n        if (item.id === id) {\r\n          return {\r\n            ...item,\r\n            data: {\r\n              ...item.data,\r\n              complete: true,\r\n              completeTime: new Date().toLocaleString(\"ru-RU\", { timeZone: \"Europe/Moscow\" })\r\n            }\r\n          }\r\n        }\r\n        return item\r\n      })\r\n    ))\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleSimpleEventDel = (id) => {\r\n    setEvents(prevState => {\r\n      const delNode = prevState.filter(item => item.id === id)\r\n      const prevStateUp = removeElements(delNode, prevState)\r\n      return prevStateUp\r\n    })\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleInUpdate = (data) => {\r\n    setEvents(prevState => {\r\n      return prevState.map(item => item.id === data.id ?\r\n        {\r\n          ...item,\r\n          data: {\r\n            ...item.data,\r\n            label: data.title,\r\n            comments: data.comments,\r\n            date: data.inputTime\r\n          }\r\n        }\r\n        :\r\n        item\r\n      )\r\n    })\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleMainUpdate = (uData) => {\r\n    let completeTime = false\r\n    if (uData.complete) {\r\n      completeTime = new Date().toLocaleString(\"ru-RU\", { timeZone: \"Europe/Moscow\" })\r\n    }\r\n    setEvents(prevState => (\r\n      prevState.map(item => item.id === uData.id ? {\r\n        ...item,\r\n        data: {\r\n          ...item.data,\r\n          type: uData.type,\r\n          deadline: uData.deadline,\r\n          complete: uData.complete,\r\n          completeTime: completeTime,\r\n          comments: uData.comments\r\n        }\r\n      }\r\n        : item\r\n      )\r\n    ))\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleAddChain = (data) => {\r\n    const subEvents = data.subEvents\r\n    const inId = data.inId\r\n    const { elementsPool, childsPool } = formElements(subEvents, inId)\r\n    setEvents(prevState => {\r\n      let prevStateUp = prevState.map(item =>\r\n        item.id === inId ? {\r\n          ...item,\r\n          data: {\r\n            ...item.data,\r\n            childsPool: [\r\n              ...item.data.childsPool,\r\n              ...childsPool\r\n            ]\r\n          }\r\n        } : item)\r\n      return [\r\n        ...prevStateUp,\r\n        ...elementsPool\r\n      ]\r\n    })\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleEventAdd = ({ parent, uEvents }) => {\r\n    // необходимо получить источник(и) и получателя(ей)\r\n    const parentItem = events.filter(item => item.id === parent.source)[0]\r\n    const outElements = getOutgoers(parentItem, events)\r\n    const inElements = getIncomers(parentItem, events)\r\n\r\n    const edgeType = 'straight';\r\n    const position = { x: 0, y: 0 };\r\n    const inTime = new Date().toLocaleString(\"ru-RU\", { timeZone: \"Europe/Moscow\" })\r\n\r\n    const elements = uEvents.reduce((acum, event) => {\r\n      const mainEdgeId = `e${event.id}`\r\n      if (parent.direction) {\r\n        acum.push({\r\n          id: mainEdgeId,\r\n          source: parent.source,\r\n          target: event.id,\r\n          type: edgeType,\r\n          animated: true\r\n        })\r\n      } else {\r\n        acum.push({\r\n          id: mainEdgeId,\r\n          source: event.id,\r\n          target: parent.source,\r\n          type: edgeType,\r\n          animated: true\r\n        })\r\n      }\r\n      // DOTO удалить предыдущий маршрут\r\n\r\n\r\n      // ПТС - ШТ\r\n      if (event.shtReport) {\r\n        const shtId = uuidv4()\r\n        // ШТ - конец\r\n        acum.push({\r\n          id: `sht${event.id}`,\r\n          source: shtId,\r\n          target: '2222',\r\n          type: edgeType,\r\n          animated: true\r\n        })\r\n\r\n\r\n      }\r\n      if (event.tlfReport) {\r\n\r\n\r\n\r\n      }\r\n\r\n\r\n      const uEvent = {\r\n        id: event.id,\r\n        type: 'user-event',\r\n        className: \"user-event\",\r\n        data: {\r\n          label: event.title,\r\n          complete: false,\r\n          inId: parent.inId,\r\n          outId: parent.outId,\r\n          handleChainDel\r\n        },\r\n        style: { backgroundColor: 'red', color: '#fff' },\r\n        draggable: false,\r\n        position\r\n      }\r\n      return acum\r\n    }, [])\r\n\r\n    // console.log(parent);\r\n    // console.log(uEvents);\r\n  }\r\n\r\n\r\n  const genRandString = () => {\r\n    return Math.random().toString(36).substring(2, 4) + Math.random().toString(36).substring(2, 4)\r\n  }\r\n\r\n  const handleNewEdge = (source, target) => {\r\n    const edgeId = 'u_' + genRandString() + '_' + source\r\n    const edgeType = 'straight';\r\n    const newEdge = [{\r\n      id: edgeId,\r\n      source: source,\r\n      target: target,\r\n      type: edgeType,\r\n      animated: true,\r\n      labelStyle: { fill: 'red', fontWeight: 700, fontSize: '12px' },\r\n    }]\r\n    const inId = events.filter(item => item.id === source)[0].data.inId\r\n    const outId = events.filter(item => item.id === target)[0].data.outId\r\n    setEvents(prevState => {\r\n      const prevStateUp = prevState.map(item => {\r\n        if (isNode(item) && item.id === inId) {\r\n          return {\r\n            ...item,\r\n            data: {\r\n              ...item.data,\r\n              childsPool: [\r\n                ...item.data.childsPool,\r\n                edgeId\r\n              ]\r\n            }\r\n          }\r\n        }\r\n        return item\r\n      }).map(item => {\r\n        if (isNode(item) && item.id === outId) {\r\n          return {\r\n            ...item,\r\n            data: {\r\n              ...item.data,\r\n              relativePool: [\r\n                ...item.data.relativePool,\r\n                edgeId\r\n              ]\r\n            }\r\n          }\r\n        }\r\n        return item\r\n      })\r\n      return [\r\n        ...prevStateUp,\r\n        ...newEdge\r\n      ]\r\n    })\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleChainDel = (data) => {\r\n    const relatives = data.relativePool\r\n    const mainInput = data.mainIn\r\n    const mainEdgeId = data.mainEdgeId\r\n    let edgeDel = false\r\n    setEvents(prevState => {\r\n      const prevStateUp = prevState.filter((item) => {\r\n        if (relatives.includes(item.id)) {\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n      const prevStateUpUp = prevStateUp.filter(item => {\r\n        if (isNode(item) && item.id === mainInput) {\r\n          if (getOutgoers(item, prevState).length > 1) {\r\n            edgeDel = true\r\n            return true\r\n          }\r\n          edgeDel = true\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n      if (edgeDel) {\r\n        return prevStateUpUp.filter(item => {\r\n          if (isEdge(item) && item.id === mainEdgeId) {\r\n            return false\r\n          }\r\n          return true\r\n        })\r\n      }\r\n      return prevStateUp\r\n    })\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n  const handleMainDel = (data) => {\r\n    const inId = data.id\r\n    const childsPool = data.childsPool\r\n    setEvents(prevState => {\r\n      return prevState.filter(item => {\r\n        if (childsPool.includes(item.id) || item.id === inId) {\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n    })\r\n    setEUpdate(prevState => (prevState + 1))\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ConfirmDialog />\r\n      <div className=\"main-wrap\">\r\n        <Grid container style={{ height: 'inherit' }}>\r\n          <Grid item xs={12} sm={9}>\r\n            <div className=\"flow-wrap\">\r\n              {events.length ?\r\n                <EventChain\r\n                  events={events}\r\n                  newone={eUpdate}\r\n                  colorUpdate={colorUpdate}\r\n                  newEdge={handleNewEdge}\r\n                />\r\n                :\r\n                null\r\n              }\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <div className=\"info-wrap\">\r\n              <Info />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <AddDialog\r\n          open={open}\r\n          close={() => setOpen(false)}\r\n          save={handleEventAddMain}\r\n        />\r\n        <SpeedAdd setAddOpen={() => setOpen(true)} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Main","import React, { Fragment } from 'react'\r\n\r\nimport Main from '../modules/Main'\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Main />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default HomePage","import React, { Fragment } from 'react'\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst ErrorState = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const PopOver = ({ open }) => {\r\n    return (\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography>\r\n          {props.poper &&\r\n            props.poper}\r\n        </Typography>\r\n      </Popover>\r\n    )\r\n  }\r\n\r\n  let imageWidth;\r\n  let imageHeight;\r\n  let variant;\r\n\r\n  switch (props.size) {\r\n    case \"small\":\r\n      imageWidth = 40;\r\n      imageHeight = 40;\r\n      variant = \"h6\";\r\n      break;\r\n\r\n    case \"medium\":\r\n      imageWidth = 60;\r\n      imageHeight = 60;\r\n      variant = \"h5\";\r\n      break;\r\n\r\n    case \"large\":\r\n      imageWidth = 100;\r\n      imageHeight = 100;\r\n      variant = \"h4\";\r\n      break;\r\n\r\n    default:\r\n      imageWidth = 60;\r\n      imageHeight = 60;\r\n      variant = \"h5\";\r\n      break;\r\n  }\r\n\r\n  if (props.type === \"page\") {\r\n    return (\r\n      <Fragment>\r\n        <PopOver open={open} />\r\n        <Box\r\n          style={{ transform: \"translate(-50%, -50%)\" }}\r\n          position=\"absolute\"\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          textAlign=\"center\"\r\n        >\r\n          {props.image && (\r\n            <Box\r\n              clone\r\n              mb={props.title || props.description ? 2 : 0}\r\n              width={`${imageWidth}%`}\r\n              height={`${imageHeight}%`}\r\n            >\r\n              {props.image}\r\n            </Box>\r\n          )}\r\n\r\n          {props.title && (\r\n            <Box mb={!props.description && props.button ? 2 : 0}>\r\n              <Typography variant={variant}>{props.title}</Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {props.description && (\r\n            <Box mb={props.button && 2}>\r\n              <Typography variant=\"body1\">{props.description}</Typography>\r\n            </Box>\r\n          )}\r\n          <HelpOutlineIcon\r\n            onMouseEnter={handlePopoverOpen}\r\n            onMouseLeave={handlePopoverClose}\r\n          />\r\n\r\n          {props.button && props.button}\r\n        </Box>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  if (props.type === \"card\") {\r\n    return (\r\n      <Fragment>\r\n        <PopOver open={open} />\r\n        <Box padding={props.padding} textAlign=\"center\">\r\n          {props.image && (\r\n            <Box\r\n              clone\r\n              mb={props.title || props.description ? 2 : 0}\r\n              width={`${imageWidth}%`}\r\n              height={`${imageHeight}%`}\r\n            >\r\n              {props.image}\r\n            </Box>\r\n          )}\r\n\r\n          {props.title && (\r\n            <Box mb={!props.description && props.button ? 2 : 0}>\r\n              <Typography variant={variant}>{props.title}</Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {props.description && (\r\n            <Box mb={props.button && 2}>\r\n              <Typography variant=\"body1\">{props.description}</Typography>\r\n            </Box>\r\n          )}\r\n          <HelpOutlineIcon\r\n            onMouseEnter={handlePopoverOpen}\r\n            onMouseLeave={handlePopoverClose}\r\n          />\r\n\r\n          {props.button && props.button}\r\n        </Box>\r\n      </Fragment>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nconst DefaultPoper = () => {\r\n  return(\r\n    <span>Смотрите консоль</span>\r\n  )\r\n}\r\n\r\nErrorState.defaultProps = {\r\n  title: 'Ошибка',\r\n  description: 'Что-то пошло не так',\r\n  poper: <DefaultPoper />,\r\n  type: \"page\",\r\n  size: \"medium\",\r\n  padding: 2,\r\n};\r\n\r\n\r\nexport default ErrorState","import React, { Fragment } from 'react';\r\nimport ErrorState from '../components/ErrorState'\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <ErrorState\r\n        title=\"404 Страница не найдена\"\r\n        description=\"Вы заблудились. Проверьте адрес\"\r\n        poper=\"Посмотрите на строку адреса в браузере. Такого адреса нет на сервере.\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport {\r\n  HomePage,\r\n  NotFoundPage\r\n} from '../pages'\r\n\r\nconst Router = () => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path={\"/\"} exact component={HomePage} />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router","import './App.scss';\r\nimport 'animate.css'\r\n\r\nimport Router from './router'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}